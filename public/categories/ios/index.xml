<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IOS on XTCEL Blog</title>
    <link>http://localhost:1313/categories/ios/</link>
    <description>Recent content in IOS on XTCEL Blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 04 Nov 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS控件传任意类型值</title>
      <link>http://localhost:1313/post/ios%E6%8E%A7%E4%BB%B6%E4%BC%A0%E4%BB%BB%E6%84%8F%E7%B1%BB%E5%9E%8B%E5%80%BC/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E6%8E%A7%E4%BB%B6%E4%BC%A0%E4%BB%BB%E6%84%8F%E7%B1%BB%E5%9E%8B%E5%80%BC/</guid>
      <description>iOS控件传任意类型值 一般方法 一般可以用打tag的方法来传值: [button addTarget:self action:@selector(action:) forControlEvents:UIControlEventTouchUpInside]; [button setTag:10]; 然而这样只能传递基础类型，通常需要传递Model或者数组。明显使用</description>
    </item>
    <item>
      <title>iOS中多语言本地化优化(Swift)</title>
      <link>http://localhost:1313/post/ios%E4%B8%AD%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%9C%AC%E5%9C%B0%E5%8C%96%E4%BC%98%E5%8C%96swift/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E4%B8%AD%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%9C%AC%E5%9C%B0%E5%8C%96%E4%BC%98%E5%8C%96swift/</guid>
      <description>原文链接：http://www.cocoachina.com/ios/20170809/20190.html 按照原文操作，发现脚本有问题，各</description>
    </item>
    <item>
      <title>RxSwift MVVM最佳实践：Inputs - Outputs（翻译）</title>
      <link>http://localhost:1313/post/rxswift0-mvvm%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5inputs-outputs/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/rxswift0-mvvm%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5inputs-outputs/</guid>
      <description>当谈到iOS架构时，MVVM是个很好的选择。它不仅提供了比MVC更好的可测试性，而且与VIPER等同类架构相比，这个架构是轻量级的。尽管如此</description>
    </item>
    <item>
      <title>UICollectionView reloadData Crash 解决方案</title>
      <link>http://localhost:1313/post/uicollectionview-reloaddata-crash%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/uicollectionview-reloaddata-crash%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>问题 UICollectionView如果更新datasource，需要更新UI，直接使用 [self.datas removeAllObjects]; [UICollecitonView reloadData]; 就会直接崩溃。 崩溃log Terminating app due to uncaught exception &amp;#39;NSInternalInconsistencyException&amp;#39;, reason: &amp;#39;UICollectionView received</description>
    </item>
    <item>
      <title>Swfit 封装微信支付 &amp; 支付宝支付 SSPayManager</title>
      <link>http://localhost:1313/post/swfit%E5%B0%81%E8%A3%85%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/swfit%E5%B0%81%E8%A3%85%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%92%8C%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%AF%E4%BB%98/</guid>
      <description>SSPayManager iOS Swfit封装微信支付&amp;amp;支付宝支付 简单的封装两大支付平台，带有示例Demo，快速在Swfit项目中使用。 BasePayManager 支付协议基类 /** * 使用已</description>
    </item>
    <item>
      <title>UIButton 设置 title 文字时闪动</title>
      <link>http://localhost:1313/post/uibutton%E8%AE%BE%E7%BD%AEtitle%E6%96%87%E5%AD%97%E6%97%B6%E9%97%AA%E5%8A%A8/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/uibutton%E8%AE%BE%E7%BD%AEtitle%E6%96%87%E5%AD%97%E6%97%B6%E9%97%AA%E5%8A%A8/</guid>
      <description>UIButton-system类型 动态设置title文字时闪动 解决方案： self.sendCodeButton.titleLabel?.text = &amp;#34;\(self.remainCount)s重新发送&amp;#3</description>
    </item>
    <item>
      <title>iOS面向切面编程AOP实践</title>
      <link>http://localhost:1313/post/ios%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8Baop%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8Baop%E5%AE%9E%E8%B7%B5/</guid>
      <description>什么是AOP AOP：Aspect Oriented Programming，译为面向切面编程。 在不修改源代码的情况下，通过运行时给程序添加统一功能的技术。 我觉</description>
    </item>
    <item>
      <title>UICollectionView自定义布局--实现课表布局</title>
      <link>http://localhost:1313/post/uicollectionview%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80--%E5%AE%9E%E7%8E%B0%E8%AF%BE%E8%A1%A8%E5%B8%83%E5%B1%80/</link>
      <pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/uicollectionview%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80--%E5%AE%9E%E7%8E%B0%E8%AF%BE%E8%A1%A8%E5%B8%83%E5%B1%80/</guid>
      <description>需求 自iOS6加入UICollectionView以来，UICollectionView在各大项目中的使用就非常频繁。UICollectio</description>
    </item>
    <item>
      <title>iOS旋转图片锯齿问题</title>
      <link>http://localhost:1313/post/ios%E6%97%8B%E8%BD%AC%E5%9B%BE%E7%89%87%E9%94%AF%E9%BD%BF%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 31 Jul 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E6%97%8B%E8%BD%AC%E5%9B%BE%E7%89%87%E9%94%AF%E9%BD%BF%E9%97%AE%E9%A2%98/</guid>
      <description>缘由 最近做项目，需要对一个小滑块进行旋转，滑块上面有一张图片。发现滑块只要一滑动就出现锯齿，后来发现是由于旋转变形时，图片仿射的多造成的。于</description>
    </item>
    <item>
      <title>iOS设备方向控制</title>
      <link>http://localhost:1313/post/ios%E8%AE%BE%E5%A4%87%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E8%AE%BE%E5%A4%87%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/</guid>
      <description>First 最近在写自己的项目的时候需要用到根据设备方向控制视图的方向。开始我的需求是iPad只可以左右翻转，iPhone只能正向。首先要实现设备方向</description>
    </item>
    <item>
      <title>iOS加密算法(DES、AES、MD5、SHA512、Base64)</title>
      <link>http://localhost:1313/post/ios%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ios%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</guid>
      <description>在iOS的项目中，我们经常会用到加密技术，比如说在登录的时候，我们会先把密码用MD5加密再传输给服务器或者直接对所有的参数进行加密再Post</description>
    </item>
  </channel>
</rss>
